---

name: config

on:
  workflow_call:
    inputs:
      platforms:
        description: "The platforms to build (CSV)"
        default: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x
        required: false
        type: string
    outputs:
      image_name:
        description: "The Docker image name"
        value: felddy/weewx
      data_artifact_name:
        description: "The name of the test data artifact"
        value: test-output
      data_artifact_path:
        description: "The path to include in the test data artifact"
        value: data
      image_archive_artifact_name:
        description: "The name of the image archives artifact"
        value: image-archives
      platforms:
        description: "The platforms to build (CSV)"
        value: ${{ inputs.platforms }}
      platforms_json:
        description: "The platforms to build (JSON)"
        value: ${{ jobs.csv-to-json.outputs.platforms_json }}
      test_platform:
        description: "The platform to use for testing"
        value: linux/amd64
---

name: Build

on:
  push:
    branches:
      - '**'
  pull_request:
  release:
    types: [edited, published]
  schedule:
    - cron: '0 10 * * *'  # everyday at 10am
  workflow_dispatch:
    inputs:
      dispatch-tag:
        description: "Tag to apply to pushed images"
        required: true
        default: "dispatch"

permissions:
  actions: read
  contents: read

jobs:

  docker-secrets:
    name: "Docker secrets"
    runs-on: ubuntu-latest
    steps:
      - name: Check docker.com credentials
        run: |
          return_code=0
          if [ -z "${{ secrets.DOCKER_USERNAME }}" ]; then
            echo "::warning::Set the DOCKER_USERNAME secret."
            return_code=1
          fi
          if [ -z "${{ secrets.DOCKER_PASSWORD }}" ]; then
            echo "::warning::Set the DOCKER_PASSWORD secret."
            return_code=1
          fi
          exit $return_code

  build-each-platform:
    name: "Build platform"
    needs:
      - config
      - lint
      - metadata
      - test-normal-image
    if: github.event_name != 'pull_request'
    strategy:
      matrix:
        platform: ${{ fromJson(needs.config.outputs.platforms_json) }}
        exclude:
          - platform: ${{ needs.config.outputs.test_platform }}
    uses: felddy/reusable-workflows/.github/workflows/docker-build-image.yml@develop
    with:
      artifact_name: ${{ needs.config.outputs.image_archive_artifact_name }}
      build_arg_1_name: VERSION
      cache_from_scopes: ${{ matrix.platform }}
      cache_to_scope: ${{ matrix.platform }}
      image_labels: ${{ needs.metadata.outputs.image_labels }}
      image_archive_name_stem: ${{ matrix.platform }}
      platforms: ${{ matrix.platform }}
    secrets:
      build_arg_1_value: ${{ needs.metadata.outputs.source_version }}

  build-multi-arch-image:
    name: "Publish image"
    needs:
      - build-each-platform
      - config
      - docker-secrets
      - metadata
    if: github.event_name != 'pull_request'
    permissions:
      packages: write
    uses: felddy/reusable-workflows/.github/workflows/docker-multi-arch-push.yml@develop
    with:
      artifact_name: ${{ needs.config.outputs.image_archive_artifact_name }}
      image_tags: ${{ needs.metadata.outputs.image_tags }}
    secrets:
      docker_password: ${{ secrets.DOCKER_PASSWORD }}
      docker_username: ${{ secrets.DOCKER_USERNAME }}

  publish-readme:
    name: "Publish docs"
    needs:
      - build-multi-arch-image
      - config
      - docker-secrets
      - metadata
    if: needs.metadata.outputs.latest == 'true'
    uses: felddy/reusable-workflows/.github/workflows/docker-publish-description.yml@develop
    with:
      image_name: ${{ needs.config.outputs.image_name }}
    secrets:
      docker_password: ${{ secrets.DOCKER_PASSWORD }}
      docker_username: ${{ secrets.DOCKER_USERNAME }}
